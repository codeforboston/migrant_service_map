{"ast":null,"code":"import _classCallCheck from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject } from './map-services.js';\nimport Menu from './components';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      categories: [],\n      resources: [],\n      services: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('map comp loaded');\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      this.setState({\n        services: map.querySourceFeatures('composite', {\n          sourceLayer: 'refugees-services'\n        })\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function (e) {\n        // categoriesList.map(function(i){ return map.setLayoutProperty(i, 'visibility', 'none'); \n        map.on('click', function (e) {\n          var coordinates = e.features[0].geometry.coordinates.slice();\n          var name = e.features[0].properties.name;\n          var website = e.features[0].properties.website;\n          var bio = e.features[0].properties.bio;\n          var telephone = e.features[0].properties.telephone;\n\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone).addTo(map); // }); \n\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n          });\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n          });\n          map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n              \"circle-radius\": 10,\n              \"circle-color\": \"#007cbf\"\n            }\n          });\n          geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n              \"type\": \"Feature\",\n              \"properties\": {\n                \"marker-color\": \"#0f0\"\n              },\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": ev.result.geometry.coordinates\n              }\n            };\n            var radius = .5;\n            var options = {\n              steps: 100,\n              units: 'miles'\n            };\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n              \"id\": \"circle-outline\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circle\n              },\n              \"paint\": {\n                \"line-color\": \"#046328\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n            map.addLayer({\n              \"id\": \"circle-outline-two\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleTwo\n              },\n              \"paint\": {\n                \"line-color\": \"#00AA46\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n            map.addLayer({\n              \"id\": \"circle-outline-three\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleThree\n              },\n              \"paint\": {\n                \"line-color\": \"#71C780\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n            map.addLayer({\n              \"id\": \"circle-outline-four\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleFour\n              },\n              \"paint\": {\n                \"line-color\": \"#D5EDDB\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var categoriesList = getCategories(this.state.services);\n      var resourcesObject = getResourceObject(this.state.services, categoriesList);\n      console.log('categories, resources, this.state.services', categoriesList, resourcesObject, this.state.services);\n      return React.createElement(\"div\", {\n        className: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\" // ref = { function(el){ this.mapContainer = el } }\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(Menu, {\n        categoryList: categoriesList.concat(['community-center']),\n        resourcesObject: resourcesObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js"],"names":["React","Component","mapboxgl","MapboxGeocoder","getCategories","getResourceObject","Menu","accessToken","Map","props","state","categories","resources","services","console","log","map","container","style","center","zoom","setState","querySourceFeatures","sourceLayer","geocoder","addControl","on","e","coordinates","features","geometry","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","addSource","addLayer","ev","removeLayer","getSource","setData","result","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","remove","categoriesList","resourcesObject","concat"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject } from './map-services.js';\nimport Menu from './components';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\n\nclass Map extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            categories: [],\n            resources: [],\n            services: []\n        }\n   }\n  \n    componentDidMount() {\n        console.log('map comp loaded');\n       \n        var map = new mapboxgl.Map({\n            container: 'map', // container id\n            style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n            center: [-71.066954, 42.359947], // starting position [lng, lat]\n            zoom: 11 // starting zoom\n        });\n\n        this.setState({services: map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'})\n        }); \n\n        var geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n\n        map.on('load', function(e){\n        // categoriesList.map(function(i){ return map.setLayoutProperty(i, 'visibility', 'none'); \n        map.on('click', function(e) {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n            \n            new mapboxgl.Popup()\n                .setLngLat(coordinates)\n                .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n                .addTo(map);\n        // }); \n    \n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n                \"circle-radius\": 10,\n                \"circle-color\": \"#007cbf\"\n            }\n        });\n\n        geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                    \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": ev.result.geometry.coordinates\n                }\n            };\n            var radius = .5;\n            var options = {\n                steps: 100,\n                units: 'miles'\n            };\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circle\n                },\n                \"paint\": {\n                    \"line-color\": \"#046328\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n            map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleTwo\n                },\n                \"paint\": {\n                    \"line-color\": \"#00AA46\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n            map.addLayer({\n                \"id\": \"circle-outline-three\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleThree\n                },\n                \"paint\": {\n                    \"line-color\": \"#71C780\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n            map.addLayer({\n                \"id\": \"circle-outline-four\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleFour\n                },\n                \"paint\": {\n                    \"line-color\": \"#D5EDDB\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n        });\n    });\n        });\n    };\n\n    componentWillUnmount() {\n        this.map.remove();\n    };\n\n\n\n    render(){\n        var categoriesList = getCategories(this.state.services); \n        var resourcesObject = getResourceObject(this.state.services, categoriesList); \n        console.log('categories, resources, this.state.services', categoriesList, resourcesObject, this.state.services); \n\n        return (\n        <div className = 'map' >\n            <div id='map'\n                // ref = { function(el){ this.mapContainer = el } }\n                >\n            </div> \n            <Menu categoryList={categoriesList.concat(['community-center'])}\n            resourcesObject={resourcesObject} />\n        </div>\n        )\n    };\n}; \n\nexport default Map;"]},"metadata":{},"sourceType":"module"}