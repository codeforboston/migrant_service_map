{"ast":null,"code":"/*\n * Copyright 2013-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n'use strict';\n\nvar interceptor, mixinUtil, defaulter;\ninterceptor = require('../interceptor');\nmixinUtil = require('../util/mixin');\n\ndefaulter = function () {\n  function mixin(prop, target, defaults) {\n    if (prop in target || prop in defaults) {\n      target[prop] = mixinUtil({}, defaults[prop], target[prop]);\n    }\n  }\n\n  function copy(prop, target, defaults) {\n    if (prop in defaults && !(prop in target)) {\n      target[prop] = defaults[prop];\n    }\n  }\n\n  var mappings = {\n    method: copy,\n    path: copy,\n    params: mixin,\n    headers: mixin,\n    entity: copy,\n    mixin: mixin\n  };\n  return function (target, defaults) {\n    for (var prop in mappings) {\n      /*jshint forin: false */\n      mappings[prop](prop, target, defaults);\n    }\n\n    return target;\n  };\n}();\n/**\n * Provide default values for a request. These values will be applied to the\n * request if the request object does not already contain an explicit value.\n *\n * For 'params', 'headers', and 'mixin', individual values are mixed in with the\n * request's values. The result is a new object representiing the combined\n * request and config values. Neither input object is mutated.\n *\n * @param {Client} [client] client to wrap\n * @param {string} [config.method] the default method\n * @param {string} [config.path] the default path\n * @param {Object} [config.params] the default params, mixed with the request's existing params\n * @param {Object} [config.headers] the default headers, mixed with the request's existing headers\n * @param {Object} [config.mixin] the default \"mixins\" (http/https options), mixed with the request's existing \"mixins\"\n *\n * @returns {Client}\n */\n\n\nmodule.exports = interceptor({\n  request: function handleRequest(request, config) {\n    return defaulter(request, config);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}