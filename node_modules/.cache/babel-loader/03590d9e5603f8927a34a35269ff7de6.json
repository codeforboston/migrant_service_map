{"ast":null,"code":"import _classCallCheck from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject } from './map-services.js';\nimport Menu from './components';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      'categories': [],\n      'resources': [],\n      'services': {}\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('map comp loaded');\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      this.setState({\n        'services': this.map.querySourceFeatures('composite', {\n          sourceLayer: 'refugees-services'\n        })\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function (e) {}); // categoriesList.map(function(i){ return map.setLayoutProperty(i, 'visibility', 'none'); \n\n      map.on('click', function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var name = e.features[0].properties.name;\n        var website = e.features[0].properties.website;\n        var bio = e.features[0].properties.bio;\n        var telephone = e.features[0].properties.telephone;\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone).addTo(map);\n      }); // map.addSource('single-point', {\n      //     \"type\": \"geojson\",\n      //     \"data\": {\n      //         \"type\": \"FeatureCollection\",\n      //         \"features\": []\n      //     }\n      // });\n      // map.addLayer({\n      //     \"id\": \"point\",\n      //     \"source\": \"single-point\",\n      //     \"type\": \"circle\",\n      //     \"paint\": {\n      //         \"circle-radius\": 10,\n      //         \"circle-color\": \"#007cbf\"\n      //     }\n      // });\n      // geocoder.on('result', function (ev) {\n      //     map.removeLayer('circle-outline');\n      //     map.removeLayer('circle-outline-two');\n      //     map.removeLayer('circle-outline-three');\n      //     map.removeLayer('circle-outline-four');\n      //     map.getSource('single-point').setData(ev.result.geometry);\n      //     var center = {\n      //         \"type\": \"Feature\",\n      //         \"properties\": {\n      //             \"marker-color\": \"#0f0\"\n      //         },\n      //         \"geometry\": {\n      //             \"type\": \"Point\",\n      //             \"coordinates\": ev.result.geometry.coordinates\n      //         }\n      //     };\n      //     var radius = .5;\n      //     var options = {\n      //         steps: 100,\n      //         units: 'miles'\n      //     };\n      //     var circle = MapboxGeocoder.turf.circle(center, radius, options);\n      //     map.addLayer({\n      //         \"id\": \"circle-outline\",\n      //         \"type\": \"line\",\n      //         \"source\": {\n      //             \"type\": \"geojson\",\n      //             \"data\": circle\n      //         },\n      //         \"paint\": {\n      //             \"line-color\": \"#046328\",\n      //             \"line-opacity\": 0.8,\n      //             \"line-width\": 10,\n      //             \"line-offset\": 5\n      //         },\n      //         \"layout\": {}\n      //     });\n      //     var radiusTwo = 1;\n      //     var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n      //     map.addLayer({\n      //         \"id\": \"circle-outline-two\",\n      //         \"type\": \"line\",\n      //         \"source\": {\n      //             \"type\": \"geojson\",\n      //             \"data\": circleTwo\n      //         },\n      //         \"paint\": {\n      //             \"line-color\": \"#00AA46\",\n      //             \"line-opacity\": 0.8,\n      //             \"line-width\": 10,\n      //             \"line-offset\": 5\n      //         },\n      //         \"layout\": {}\n      //     });\n      //     var radiusThree = 3;\n      //     var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n      //     map.addLayer({\n      //         \"id\": \"circle-outline-three\",\n      //         \"type\": \"line\",\n      //         \"source\": {\n      //             \"type\": \"geojson\",\n      //             \"data\": circleThree\n      //         },\n      //         \"paint\": {\n      //             \"line-color\": \"#71C780\",\n      //             \"line-opacity\": 0.8,\n      //             \"line-width\": 10,\n      //             \"line-offset\": 5\n      //         },\n      //         \"layout\": {}\n      //     });\n      //     var radiusFour = 5;\n      //     var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n      //     map.addLayer({\n      //         \"id\": \"circle-outline-four\",\n      //         \"type\": \"line\",\n      //         \"source\": {\n      //             \"type\": \"geojson\",\n      //             \"data\": circleFour\n      //         },\n      //         \"paint\": {\n      //             \"line-color\": \"#D5EDDB\",\n      //             \"line-opacity\": 0.8,\n      //             \"line-width\": 10,\n      //             \"line-offset\": 5\n      //         },\n      //         \"layout\": {}\n      //     });\n      // });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var categoriesList = getCategories(this.state.services);\n      var resourcesObject = getResourceObject(this.state.services, categoriesList);\n      console.log(categoriesList, resourcesObject, this.state.services);\n      return React.createElement(\"div\", {\n        className: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js"],"names":["React","Component","mapboxgl","MapboxGeocoder","getCategories","getResourceObject","Menu","accessToken","Map","props","state","console","log","map","container","style","center","zoom","setState","querySourceFeatures","sourceLayer","geocoder","addControl","on","e","coordinates","features","geometry","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","remove","categoriesList","services","resourcesObject"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject } from './map-services.js';\nimport Menu from './components';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\n\nclass Map extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            'categories': [],\n            'resources': [],\n            'services': {}\n        }\n   }\n  \n    componentDidMount() {\n        console.log('map comp loaded');\n       \n        var map = new mapboxgl.Map({\n            container: 'map', // container id\n            style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n            center: [-71.066954, 42.359947], // starting position [lng, lat]\n            zoom: 11 // starting zoom\n        });\n\n        this.setState({\n            'services': this.map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'})\n        }); \n\n        var geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n\n        map.on('load', function(e){});  \n        // categoriesList.map(function(i){ return map.setLayoutProperty(i, 'visibility', 'none'); \n        map.on('click', function(e) {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n            \n            new mapboxgl.Popup()\n                .setLngLat(coordinates)\n                .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n                .addTo(map);\n        }); \n    \n\n        // map.addSource('single-point', {\n        //     \"type\": \"geojson\",\n        //     \"data\": {\n        //         \"type\": \"FeatureCollection\",\n        //         \"features\": []\n        //     }\n        // });\n        // map.addLayer({\n        //     \"id\": \"point\",\n        //     \"source\": \"single-point\",\n        //     \"type\": \"circle\",\n        //     \"paint\": {\n        //         \"circle-radius\": 10,\n        //         \"circle-color\": \"#007cbf\"\n        //     }\n        // });\n        // geocoder.on('result', function (ev) {\n        //     map.removeLayer('circle-outline');\n        //     map.removeLayer('circle-outline-two');\n        //     map.removeLayer('circle-outline-three');\n        //     map.removeLayer('circle-outline-four');\n        //     map.getSource('single-point').setData(ev.result.geometry);\n        //     var center = {\n        //         \"type\": \"Feature\",\n        //         \"properties\": {\n        //             \"marker-color\": \"#0f0\"\n        //         },\n        //         \"geometry\": {\n        //             \"type\": \"Point\",\n        //             \"coordinates\": ev.result.geometry.coordinates\n        //         }\n        //     };\n        //     var radius = .5;\n        //     var options = {\n        //         steps: 100,\n        //         units: 'miles'\n        //     };\n        //     var circle = MapboxGeocoder.turf.circle(center, radius, options);\n        //     map.addLayer({\n        //         \"id\": \"circle-outline\",\n        //         \"type\": \"line\",\n        //         \"source\": {\n        //             \"type\": \"geojson\",\n        //             \"data\": circle\n        //         },\n        //         \"paint\": {\n        //             \"line-color\": \"#046328\",\n        //             \"line-opacity\": 0.8,\n        //             \"line-width\": 10,\n        //             \"line-offset\": 5\n        //         },\n        //         \"layout\": {}\n        //     });\n        //     var radiusTwo = 1;\n        //     var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n        //     map.addLayer({\n        //         \"id\": \"circle-outline-two\",\n        //         \"type\": \"line\",\n        //         \"source\": {\n        //             \"type\": \"geojson\",\n        //             \"data\": circleTwo\n        //         },\n        //         \"paint\": {\n        //             \"line-color\": \"#00AA46\",\n        //             \"line-opacity\": 0.8,\n        //             \"line-width\": 10,\n        //             \"line-offset\": 5\n        //         },\n        //         \"layout\": {}\n        //     });\n        //     var radiusThree = 3;\n        //     var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n        //     map.addLayer({\n        //         \"id\": \"circle-outline-three\",\n        //         \"type\": \"line\",\n        //         \"source\": {\n        //             \"type\": \"geojson\",\n        //             \"data\": circleThree\n        //         },\n        //         \"paint\": {\n        //             \"line-color\": \"#71C780\",\n        //             \"line-opacity\": 0.8,\n        //             \"line-width\": 10,\n        //             \"line-offset\": 5\n        //         },\n        //         \"layout\": {}\n        //     });\n        //     var radiusFour = 5;\n        //     var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n        //     map.addLayer({\n        //         \"id\": \"circle-outline-four\",\n        //         \"type\": \"line\",\n        //         \"source\": {\n        //             \"type\": \"geojson\",\n        //             \"data\": circleFour\n        //         },\n        //         \"paint\": {\n        //             \"line-color\": \"#D5EDDB\",\n        //             \"line-opacity\": 0.8,\n        //             \"line-width\": 10,\n        //             \"line-offset\": 5\n        //         },\n        //         \"layout\": {}\n        //     });\n        // });\n\n    };\n\n    componentWillUnmount() {\n        this.map.remove();\n    };\n\n\n\n    render() {\n        var categoriesList = getCategories(this.state.services); \n        var resourcesObject = getResourceObject(this.state.services, categoriesList); \n        console.log(categoriesList, resourcesObject, this.state.services); \n\n        return (\n        <div className = 'map' >\n            <div id='map'>\n                {/* // ref = { function(el){ this.mapContainer = el } } > */}\n            </div> \n            {/* <Menu categoryList={this.categoryList} */}\n                {/* resourcesObject={this.resourceObjects} /> */}\n        </div>\n        )\n    };\n}; \n\nexport default Map;"]},"metadata":{},"sourceType":"module"}