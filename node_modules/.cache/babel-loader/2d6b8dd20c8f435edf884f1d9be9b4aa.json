{"ast":null,"code":"import _classCallCheck from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { loadMenu, getCategories, getResourceObject, makeResourceEntry } from './map-services.js';\nimport Menu from './components';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      services: [],\n      resourceObject: {},\n      categoriesList: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('map comp loaded');\n      var loadMap = new Promise(function (resolve, reject) {\n        var map = new mapboxgl.Map({\n          container: 'map',\n          // container id\n          style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n          // stylesheet location\n          center: [-71.066954, 42.359947],\n          // starting position [lng, lat]\n          zoom: 11 // starting zoom\n\n        });\n        var geocoder = new MapboxGeocoder({\n          accessToken: mapboxgl.accessToken\n        });\n        map.addControl(geocoder);\n        map.on('load', function () {\n          var sources = map.querySourceFeatures('composite', {\n            sourceLayer: 'refugees-services'\n          });\n          var categoryList = getCategories(sources);\n          var resourceObject = getResourceObject(sources, categoryList);\n          var resourceItems = resourceObject.map(function (object) {\n            return makeResourceEntry(object);\n          });\n\n          _this2.setState({\n            services: resourceItems,\n            categoryList: categoryList,\n            resourceItems: resourceItems\n          });\n\n          console.log(_this2.state.services);\n          map.on('click', function (e) {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n\n            new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone).addTo(map); // }); \n\n            map.addSource('single-point', {\n              \"type\": \"geojson\",\n              \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n              }\n            });\n            map.addSource('single-point', {\n              \"type\": \"geojson\",\n              \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n              }\n            });\n            map.addLayer({\n              \"id\": \"point\",\n              \"source\": \"single-point\",\n              \"type\": \"circle\",\n              \"paint\": {\n                \"circle-radius\": 10,\n                \"circle-color\": \"#007cbf\"\n              }\n            });\n            geocoder.on('result', function (ev) {\n              map.removeLayer('circle-outline');\n              map.removeLayer('circle-outline-two');\n              map.removeLayer('circle-outline-three');\n              map.removeLayer('circle-outline-four');\n              map.getSource('single-point').setData(ev.result.geometry);\n              var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                  \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                  \"type\": \"Point\",\n                  \"coordinates\": ev.result.geometry.coordinates\n                }\n              };\n              var radius = .5;\n              var options = {\n                steps: 100,\n                units: 'miles'\n              };\n              var circle = MapboxGeocoder.turf.circle(center, radius, options);\n              map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                  \"type\": \"geojson\",\n                  \"data\": circle\n                },\n                \"paint\": {\n                  \"line-color\": \"#046328\",\n                  \"line-opacity\": 0.8,\n                  \"line-width\": 10,\n                  \"line-offset\": 5\n                },\n                \"layout\": {}\n              });\n              var radiusTwo = 1;\n              var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n              map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                  \"type\": \"geojson\",\n                  \"data\": circleTwo\n                },\n                \"paint\": {\n                  \"line-color\": \"#00AA46\",\n                  \"line-opacity\": 0.8,\n                  \"line-width\": 10,\n                  \"line-offset\": 5\n                },\n                \"layout\": {}\n              });\n              var radiusThree = 3;\n              var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n              map.addLayer({\n                \"id\": \"circle-outline-three\",\n                \"type\": \"line\",\n                \"source\": {\n                  \"type\": \"geojson\",\n                  \"data\": circleThree\n                },\n                \"paint\": {\n                  \"line-color\": \"#71C780\",\n                  \"line-opacity\": 0.8,\n                  \"line-width\": 10,\n                  \"line-offset\": 5\n                },\n                \"layout\": {}\n              });\n              var radiusFour = 5;\n              var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n              map.addLayer({\n                \"id\": \"circle-outline-four\",\n                \"type\": \"line\",\n                \"source\": {\n                  \"type\": \"geojson\",\n                  \"data\": circleFour\n                },\n                \"paint\": {\n                  \"line-color\": \"#D5EDDB\",\n                  \"line-opacity\": 0.8,\n                  \"line-width\": 10,\n                  \"line-offset\": 5\n                },\n                \"layout\": {}\n              });\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var categoriesList = this.state.categoryList;\n      var resourcesObject = this.state.resourceObject;\n      console.log('categories, resources, this.state.services', categoriesList, resourcesObject, this.state.services);\n      return React.createElement(\"div\", {\n        className: \"map map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        categoriesList: categoriesList,\n        resourcesObject: resourcesObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"map\",\n        className: \"map\",\n        ref: function ref(el) {\n          return _this3.mapContainer = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js"],"names":["React","Component","mapboxgl","MapboxGeocoder","loadMenu","getCategories","getResourceObject","makeResourceEntry","Menu","accessToken","Map","props","state","services","resourceObject","categoriesList","console","log","loadMap","Promise","resolve","reject","map","container","style","center","zoom","geocoder","addControl","on","sources","querySourceFeatures","sourceLayer","categoryList","resourceItems","object","setState","e","coordinates","features","geometry","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","addSource","addLayer","ev","removeLayer","getSource","setData","result","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","remove","resourcesObject","el","mapContainer"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { loadMenu, getCategories, getResourceObject, makeResourceEntry } from './map-services.js';\nimport Menu from './components';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\n\nclass Map extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            services: [], \n            resourceObject: {}, \n            categoriesList: []\n        }\n   }\n  \n    componentDidMount() {\n        console.log('map comp loaded');\n       \n        let loadMap = new Promise((resolve, reject) => {\n            let map = new mapboxgl.Map({\n            container: 'map', // container id\n            style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n            center: [-71.066954, 42.359947], // starting position [lng, lat]\n            zoom: 11 // starting zoom\n            });\n        \n    \n        var geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n\n        map.on('load', () => {\n            let sources = map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'});\n            let categoryList = getCategories(sources); \n            let resourceObject = getResourceObject(sources, categoryList); \n            let resourceItems = resourceObject.map(object => makeResourceEntry(object));  \n            this.setState({services: resourceItems,\n            categoryList: categoryList, \n            resourceItems: resourceItems});\n            console.log(this.state.services); \n\n\n\n\n        map.on('click', (e) => {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n            \n            new mapboxgl.Popup()\n                .setLngLat(coordinates)\n                .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n                .addTo(map);\n        // }); \n    \n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n                \"circle-radius\": 10,\n                \"circle-color\": \"#007cbf\"\n            }\n        });\n\n        geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                    \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": ev.result.geometry.coordinates\n                }\n            };\n            var radius = .5;\n            var options = {\n                steps: 100,\n                units: 'miles'\n            };\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circle\n                },\n                \"paint\": {\n                    \"line-color\": \"#046328\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n            map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleTwo\n                },\n                \"paint\": {\n                    \"line-color\": \"#00AA46\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n            map.addLayer({\n                \"id\": \"circle-outline-three\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleThree\n                },\n                \"paint\": {\n                    \"line-color\": \"#71C780\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n            map.addLayer({\n                \"id\": \"circle-outline-four\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleFour\n                },\n                \"paint\": {\n                    \"line-color\": \"#D5EDDB\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n        });\n    });\n}); \n    \n})}\n;\n\n    componentWillUnmount() {\n        this.map.remove();\n    }\n\n\n\n    render(){\n        let categoriesList = this.state.categoryList;\n        let resourcesObject = this.state.resourceObject;\n        console.log('categories, resources, this.state.services', categoriesList, resourcesObject, this.state.services); \n\n        return (\n        <div className='map map-container' >\n            <Menu categoriesList={categoriesList}\n                  resourcesObject={resourcesObject} />\n            <div id='map'\n                className='map'\n                ref={el => this.mapContainer = el}\n                >\n            </div> \n        </div>\n        )\n    };\n}; \n\nexport default Map;"]},"metadata":{},"sourceType":"module"}