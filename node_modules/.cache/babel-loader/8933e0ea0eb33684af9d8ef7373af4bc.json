{"ast":null,"code":"var _jsxFileName = \"/Users/dnoftsier/Dev/migrant_service_map/src/main.js\";\nimport React from 'react';\nimport { resourceObjects } from './helper_functions.js';\nimport { toggleableLayersObjects } from './toggleableLayersObjects.js'; //the individual resources (company, school, non-profit)\n\nexport function ResourceListItem(props) {\n  return React.createElement(\"li\", {\n    className: \"list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#target\"\n    /* onClick={mapboxPopup}*/\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.name));\n} //array of the types of resources -- forms the main menu entries. Draws from the live database so should change with updates. \n\nexport var categoryList = makeTypeList(toggleableLayersObjects); //get the types from the temporary 'data' object \n\nfunction makeTypeList(objectArray) {\n  return objectArray.map(function (a) {\n    return a.type;\n  }).filter(function (value, index, self) {\n    return self.indexOf(value) === index;\n  });\n}\n\n; // get the types from mapbox data\n// function getCategories(){\n//     let map = 'mapbox reference'; \n//     let services = map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'}); \n//     return services.map(function(a){ return a.type }).filter(function(value, index, self){\n// return self.indexOf(value) === index ; \n// }\n//TO-DO when mapbox hooks up \n\nfunction toggleMapIcons() {\n  'toggle(category)';\n}\n\n; //toggles child menu\n\nfunction toggleChildMenu(category) {\n  console.log('toggleChildMenu', category);\n  var myMenu = document.getElementById('list-' + category);\n  console.log(myMenu);\n  myMenu.classList.toggle('show');\n}\n\n;\nexport function ResourceSectionHeader(props) {\n  return React.createElement(\"div\", {\n    className: \"section-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, 'icon'), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#target\",\n    onClick: function onClick() {\n      return toggleChildMenu(props.category);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.category)), React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, 'chevron'));\n}\nexport function ResourceList(props) {\n  // const style={'scroll': 'scroll'};\n  return React.createElement(\"ul\", {\n    className: \"child-menu\",\n    id: 'list-' + props.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, toggleableLayersObjects.filter(function (resource) {\n    return resource.type === props.category;\n  }).map(function (resource) {\n    return React.createElement(ResourceListItem, {\n      name: resource.name,\n      key: resource.id,\n      category: resource.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }));\n} // function mapboxPopup() {\n//     new mapboxgl.Popup()\n//     .setLngLat(coordinates)\n//     .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n//     .addTo(map);\n// }","map":{"version":3,"sources":["/Users/dnoftsier/Dev/migrant_service_map/src/main.js"],"names":["React","resourceObjects","toggleableLayersObjects","ResourceListItem","props","name","categoryList","makeTypeList","objectArray","map","a","type","filter","value","index","self","indexOf","toggleMapIcons","toggleChildMenu","category","console","log","myMenu","document","getElementById","classList","toggle","ResourceSectionHeader","ResourceList","resource","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,uBAAT,QAAwC,8BAAxC,C,CAIA;;AACA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACpC,SACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B;AAAG,IAAA,IAAI,EAAC;AAAU;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CA,KAAK,CAACC,IAArD,CAA1B,CADJ;AAGH,C,CAED;;AACA,OAAO,IAAMC,YAAY,GAAGC,YAAY,CAACL,uBAAD,CAAjC,C,CAEP;;AACA,SAASK,YAAT,CAAsBC,WAAtB,EAAkC;AAC9B,SAAOA,WAAW,CAACC,GAAZ,CAAgB,UAASC,CAAT,EAAW;AAAE,WAAOA,CAAC,CAACC,IAAT;AAAe,GAA5C,EAA8CC,MAA9C,CAAqD,UAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA4B;AACpF,WAAOA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/B;AACH,GAFM,CAAP;AAGH;;AAAA,C,CAED;AACA;AACA;AACA;AACA;AACI;AACJ;AAEA;;AACA,SAASG,cAAT,GAAyB;AAAE;AAAoB;;AAAA,C,CAE/C;;AACA,SAASC,eAAT,CAAyBC,QAAzB,EAAkC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAA/B;AACA,MAAIG,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAUL,QAAlC,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAA,EAAAA,MAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwB,MAAxB;AACF;;AAAA;AAGF,OAAO,SAASC,qBAAT,CAA+BvB,KAA/B,EAAqC;AACxC,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,MAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI;AAAG,IAAA,IAAI,EAAC,SAAR;AAAkB,IAAA,OAAO,EAAE,mBAAU;AAAE,aAAOc,eAAe,CAACd,KAAK,CAACe,QAAP,CAAtB;AAAuC,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiFf,KAAK,CAACe,QAAvF,CAAJ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,SAAJ,CAHJ,CADJ;AAOH;AAGD,OAAO,SAASS,YAAT,CAAsBxB,KAAtB,EAA4B;AAC/B;AACA,SACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAA2B,IAAA,EAAE,EAAE,UAAUA,KAAK,CAACe,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCjB,uBAAuB,CAACU,MAAxB,CAA+B,UAASiB,QAAT,EAAkB;AAC1C,WAAOA,QAAQ,CAAClB,IAAT,KAAkBP,KAAK,CAACe,QAA/B;AACH,GAFJ,EAEMV,GAFN,CAEU,UAASoB,QAAT,EAAmB;AACtB,WAAO,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,QAAQ,CAACxB,IAAjC;AAAuC,MAAA,GAAG,EAAEwB,QAAQ,CAACC,EAArD;AAAyD,MAAA,QAAQ,EAAED,QAAQ,CAAClB,IAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAJJ,CADD,CADJ;AAUH,C,CAKD;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'; \nimport { resourceObjects } from './helper_functions.js';\nimport { toggleableLayersObjects } from './toggleableLayersObjects.js';\n\n\n\n//the individual resources (company, school, non-profit)\nexport function ResourceListItem(props) {\n    return (\n        <li className='list-item'><a href=\"#target\" /* onClick={mapboxPopup}*/ >{props.name}</a></li>\n    )\n}\n\n//array of the types of resources -- forms the main menu entries. Draws from the live database so should change with updates. \nexport const categoryList = makeTypeList(toggleableLayersObjects);\n\n//get the types from the temporary 'data' object \nfunction makeTypeList(objectArray){\n    return objectArray.map(function(a){ return a.type }).filter(function(value, index, self){\n        return self.indexOf(value) === index ; \n    })\n}; \n\n// get the types from mapbox data\n// function getCategories(){\n//     let map = 'mapbox reference'; \n//     let services = map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'}); \n//     return services.map(function(a){ return a.type }).filter(function(value, index, self){\n    // return self.indexOf(value) === index ; \n// }\n\n//TO-DO when mapbox hooks up \nfunction toggleMapIcons(){ 'toggle(category)' };\n\n//toggles child menu\nfunction toggleChildMenu(category){ \n    console.log('toggleChildMenu', category);\n    var myMenu = document.getElementById('list-' + category);\n    console.log(myMenu); \n    myMenu.classList.toggle('show')\n };\n\n\nexport function ResourceSectionHeader(props){\n    return (\n        <div className='section-header'>\n            <i>{'icon'}</i>\n            <h2><a href=\"#target\" onClick={function(){ return toggleChildMenu(props.category)}}>{props.category}</a></h2>\n            <i>{'chevron'}</i>\n        </div>\n    )\n}\n\n\nexport function ResourceList(props){\n    // const style={'scroll': 'scroll'};\n    return(\n        <ul className='child-menu' id={'list-' + props.category}>\n        {toggleableLayersObjects.filter(function(resource){\n                return resource.type === props.category\n            }).map(function(resource) {\n                return <ResourceListItem name={resource.name} key={resource.id} category={resource.type}/>\n            })\n        }\n        </ul>\n    )\n}\n\n\n\n\n// function mapboxPopup() {\n//     new mapboxgl.Popup()\n//     .setLngLat(coordinates)\n//     .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n//     .addTo(map);\n// }"]},"metadata":{},"sourceType":"module"}