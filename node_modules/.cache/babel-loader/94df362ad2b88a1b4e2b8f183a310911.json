{"ast":null,"code":"import _classCallCheck from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dnoftsier/Dev/migrant_service_map/src/map.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      this.geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function () {\n        for (var i = 0; i < Object.keys(toggleableLayers).length; i++) {\n          var id = toggleableLayers[i].id;\n          var idStyle = map.setLayoutProperty(id, 'visibility', 'none');\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n          });\n          map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n              \"circle-radius\": 10,\n              \"circle-color\": \"#007cbf\"\n            }\n          });\n          geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n              \"type\": \"Feature\",\n              \"properties\": {\n                \"marker-color\": \"#0f0\"\n              },\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": ev.result.geometry.coordinates\n              }\n            };\n            var radius = .5;\n            var options = {\n              steps: 100,\n              units: 'miles'\n            };\n            var circle = turf.circle(center, radius, options);\n            map.addLayer({\n              \"id\": \"circle-outline\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circle\n              },\n              \"paint\": {\n                \"line-color\": \"#046328\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = turf.circle(center, radiusTwo, options);\n            map.addLayer({\n              \"id\": \"circle-outline-two\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleTwo\n              },\n              \"paint\": {\n                \"line-color\": \"#00AA46\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = turf.circle(center, radiusThree, options);\n            map.addLayer({\n              \"id\": \"circle-outline-three\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleThree\n              },\n              \"paint\": {\n                \"line-color\": \"#71C780\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = turf.circle(center, radiusFour, options);\n            map.addLayer({\n              \"id\": \"circle-outline-four\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleFour\n              },\n              \"paint\": {\n                \"line-color\": \"#D5EDDB\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n          });\n        }\n\n        map.on('click', toggleableLayers[i].id, function (e) {\n          var coordinates = e.features[0].geometry.coordinates.slice();\n          var name = e.features[0].properties.name;\n          var website = e.features[0].properties.website;\n          var bio = e.features[0].properties.bio;\n          var telephone = e.features[0].properties.telephone;\n\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone).addTo(map);\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var style = {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        width: '100%'\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        ref: function ref(el) {\n          return _this.mapContainer = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\nexport { Map as default };\n;","map":{"version":3,"sources":["/Users/dnoftsier/Dev/migrant_service_map/src/map.js"],"names":["React","Component","mapboxgl","accessToken","Map","map","container","style","center","zoom","geocoder","MapboxGeocoder","addControl","on","i","Object","keys","toggleableLayers","length","id","idStyle","setLayoutProperty","addSource","addLayer","ev","removeLayer","getSource","setData","result","geometry","coordinates","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","e","features","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","remove","position","top","bottom","width","el","mapContainer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGAA,QAAQ,CAACC,WAAT,GAAsB,sGAAtB;;IAEqBC,G;;;;;;;;;;;;;wCACG;AAEhB,WAAKC,GAAL,GAAW,IAAIH,QAAQ,CAACE,GAAb,CAAiB;AAC1BE,QAAAA,SAAS,EAAE,KADe;AACR;AAClBC,QAAAA,KAAK,EAAE,2DAFmB;AAE0C;AACpEC,QAAAA,MAAM,EAAE,CAAC,CAAC,SAAF,EAAa,SAAb,CAHkB;AAGO;AACjCC,QAAAA,IAAI,EAAE,EAJoB,CAIjB;;AAJiB,OAAjB,CAAX;AAOA,WAAKC,QAAL,GAAgB,IAAIC,cAAJ,CAAmB;AACjCR,QAAAA,WAAW,EAAED,QAAQ,CAACC;AADW,OAAnB,CAAhB;AAIAE,MAAAA,GAAG,CAACO,UAAJ,CAAeF,QAAf;AAGFL,MAAAA,GAAG,CAACQ,EAAJ,CAAO,MAAP,EAAe,YAAU;AACvB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYC,gBAAZ,EAA8BC,MAAlD,EAA0DJ,CAAC,EAA3D,EAA+D;AAC7D,cAAIK,EAAE,GAAGF,gBAAgB,CAACH,CAAD,CAAhB,CAAoBK,EAA7B;AACA,cAAIC,OAAO,GAAGf,GAAG,CAACgB,iBAAJ,CAAsBF,EAAtB,EAA0B,YAA1B,EAAwC,MAAxC,CAAd;AAEAd,UAAAA,GAAG,CAACiB,SAAJ,CAAc,cAAd,EAA8B;AAC5B,oBAAQ,SADoB;AAE5B,oBAAQ;AACJ,sBAAQ,mBADJ;AAEJ,0BAAY;AAFR;AAFoB,WAA9B;AAOEjB,UAAAA,GAAG,CAACkB,QAAJ,CAAa;AACT,kBAAM,OADG;AAET,sBAAU,cAFD;AAGT,oBAAQ,QAHC;AAIT,qBAAS;AACL,+BAAiB,EADZ;AAEL,8BAAgB;AAFX;AAJA,WAAb;AASAb,UAAAA,QAAQ,CAACG,EAAT,CAAY,QAAZ,EAAsB,UAASW,EAAT,EAAa;AACnCnB,YAAAA,GAAG,CAACoB,WAAJ,CAAgB,gBAAhB;AACApB,YAAAA,GAAG,CAACoB,WAAJ,CAAgB,oBAAhB;AACApB,YAAAA,GAAG,CAACoB,WAAJ,CAAgB,sBAAhB;AACApB,YAAAA,GAAG,CAACoB,WAAJ,CAAgB,qBAAhB;AACApB,YAAAA,GAAG,CAACqB,SAAJ,CAAc,cAAd,EAA8BC,OAA9B,CAAsCH,EAAE,CAACI,MAAH,CAAUC,QAAhD;AACA,gBAAIrB,MAAM,GAAG;AACT,sBAAQ,SADC;AAET,4BAAc;AACd,gCAAgB;AADF,eAFL;AAKT,0BAAY;AACZ,wBAAQ,OADI;AAEZ,+BAAegB,EAAE,CAACI,MAAH,CAAUC,QAAV,CAAmBC;AAFtB;AALH,aAAb;AAUA,gBAAIC,MAAM,GAAG,EAAb;AACA,gBAAIC,OAAO,GAAG;AAACC,cAAAA,KAAK,EAAE,GAAR;AAAaC,cAAAA,KAAK,EAAE;AAApB,aAAd;AACA,gBAAIC,MAAM,GAAGC,IAAI,CAACD,MAAL,CAAY3B,MAAZ,EAAoBuB,MAApB,EAA4BC,OAA5B,CAAb;AACA3B,YAAAA,GAAG,CAACkB,QAAJ,CAAa;AACT,oBAAM,gBADG;AAET,sBAAQ,MAFC;AAGT,wBAAU;AACN,wBAAQ,SADF;AAEN,wBAAQY;AAFF,eAHD;AAOT,uBAAS;AACT,8BAAc,SADL;AAET,gCAAgB,GAFP;AAGT,8BAAc,EAHL;AAIT,+BAAe;AAJN,eAPA;AAaT,wBAAU;AAbD,aAAb;AAgBA,gBAAIE,SAAS,GAAG,CAAhB;AACA,gBAAIC,SAAS,GAAGF,IAAI,CAACD,MAAL,CAAY3B,MAAZ,EAAoB6B,SAApB,EAA+BL,OAA/B,CAAhB;AACI3B,YAAAA,GAAG,CAACkB,QAAJ,CAAa;AACb,oBAAM,oBADO;AAEb,sBAAQ,MAFK;AAGb,wBAAU;AACN,wBAAQ,SADF;AAEN,wBAAQe;AAFF,eAHG;AAOT,uBAAS;AACT,8BAAc,SADL;AAET,gCAAgB,GAFP;AAGT,8BAAc,EAHL;AAIT,+BAAe;AAJN,eAPA;AAaT,wBAAU;AAbD,aAAb;AAgBA,gBAAIC,WAAW,GAAG,CAAlB;AACA,gBAAIC,WAAW,GAAGJ,IAAI,CAACD,MAAL,CAAY3B,MAAZ,EAAoB+B,WAApB,EAAiCP,OAAjC,CAAlB;AACA3B,YAAAA,GAAG,CAACkB,QAAJ,CAAa;AACT,oBAAM,sBADG;AAET,sBAAQ,MAFC;AAGT,wBAAU;AACN,wBAAQ,SADF;AAEN,wBAAQiB;AAFF,eAHD;AAOL,uBAAS;AACT,8BAAc,SADL;AAET,gCAAgB,GAFP;AAGT,8BAAc,EAHL;AAIT,+BAAe;AAJN,eAPJ;AAaT,wBAAU;AAbD,aAAb;AAgBA,gBAAIC,UAAU,GAAG,CAAjB;AACA,gBAAIC,UAAU,GAAGN,IAAI,CAACD,MAAL,CAAY3B,MAAZ,EAAoBiC,UAApB,EAAgCT,OAAhC,CAAjB;AACA3B,YAAAA,GAAG,CAACkB,QAAJ,CAAa;AACT,oBAAM,qBADG;AAET,sBAAQ,MAFC;AAGT,wBAAU;AACV,wBAAQ,SADE;AAEV,wBAAQmB;AAFE,eAHD;AAOT,uBAAS;AACT,8BAAc,SADL;AAET,gCAAgB,GAFP;AAGT,8BAAc,EAHL;AAIT,+BAAe;AAJN,eAPA;AAaT,wBAAU;AAbD,aAAb;AAgBH,WAzFD;AA0FH;;AAEHrC,QAAAA,GAAG,CAACQ,EAAJ,CAAO,OAAP,EAAgBI,gBAAgB,CAACH,CAAD,CAAhB,CAAoBK,EAApC,EAAwC,UAAUwB,CAAV,EAAa;AACnD,cAAIb,WAAW,GAAGa,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcf,QAAd,CAAuBC,WAAvB,CAAmCe,KAAnC,EAAlB;AACA,cAAIC,IAAI,GAAGH,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcG,UAAd,CAAyBD,IAApC;AACA,cAAIE,OAAO,GAAGL,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcG,UAAd,CAAyBC,OAAvC;AACA,cAAIC,GAAG,GAAGN,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcG,UAAd,CAAyBE,GAAnC;AACA,cAAIC,SAAS,GAAGP,CAAC,CAACC,QAAF,CAAW,CAAX,EAAcG,UAAd,CAAyBG,SAAzC;;AACA,iBAAOC,IAAI,CAACC,GAAL,CAAST,CAAC,CAACU,MAAF,CAASC,GAAT,GAAexB,WAAW,CAAC,CAAD,CAAnC,IAA0C,GAAjD,EAAsD;AAClDA,YAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBa,CAAC,CAACU,MAAF,CAASC,GAAT,GAAexB,WAAW,CAAC,CAAD,CAA1B,GAAgC,GAAhC,GAAsC,CAAC,GAAzD;AACH;;AAED,cAAI5B,QAAQ,CAACqD,KAAb,GACGC,SADH,CACa1B,WADb,EAEG2B,OAFH,CAEW,SAASX,IAAT,GAAgB,OAAhB,GAA0B,UAA1B,GAAuCE,OAAvC,GAAiD,GAAjD,GAAuDA,OAAvD,GAAiE,MAAjE,GAA0E,UAA1E,GAAuF,KAAvF,GAA+FC,GAA/F,GAAqG,MAArG,GAA8G,4BAA9G,GAA6IC,SAFxJ,EAGGQ,KAHH,CAGSrD,GAHT;AAID,SAdD;AAgBH,OAjIG;AAkIL;;;2CAG0B;AACrB,WAAKA,GAAL,CAASsD,MAAT;AACD;;;6BAEQ;AAAA;;AACP,UAAMpD,KAAK,GAAG;AACZqD,QAAAA,QAAQ,EAAE,UADE;AAEZC,QAAAA,GAAG,EAAE,CAFO;AAGZC,QAAAA,MAAM,EAAE,CAHI;AAIZC,QAAAA,KAAK,EAAE;AAJK,OAAd;AAOA,aAAO;AAAK,QAAA,KAAK,EAAExD,KAAZ;AAAmB,QAAA,GAAG,EAAE,aAAAyD,EAAE;AAAA,iBAAI,KAAI,CAACC,YAAL,GAAoBD,EAAxB;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAnK4BhE,KAAK,CAACC,S;;SAAlBG,G;AAoKlB","sourcesContent":["import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\n\nmapboxgl.accessToken ='pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nexport default class Map extends React.Component {\n    componentDidMount() {\n       \n        this.map = new mapboxgl.Map({\n          container: 'map', // container id\n          style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n          center: [-71.066954, 42.359947], // starting position [lng, lat]\n          zoom: 11 // starting zoom\n        });\n\n        this.geocoder = new MapboxGeocoder({\n          accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n     \n\n      map.on('load', function(){\n        for (var i = 0; i < Object.keys(toggleableLayers).length; i++) {\n          var id = toggleableLayers[i].id;\n          var idStyle = map.setLayoutProperty(id, 'visibility', 'none');\n\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n            });\n            map.addLayer({\n                \"id\": \"point\",\n                \"source\": \"single-point\",\n                \"type\": \"circle\",\n                \"paint\": {\n                    \"circle-radius\": 10,\n                    \"circle-color\": \"#007cbf\"\n                }\n            });\n            geocoder.on('result', function(ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": ev.result.geometry.coordinates\n                }\n            };\n            var radius = .5;\n            var options = {steps: 100, units: 'miles'};\n            var circle = turf.circle(center, radius, options);\n            map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circle\n                },\n                \"paint\": {\n                \"line-color\": \"#046328\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n                },\n                \"layout\": {\n                }\n            });\n            var radiusTwo = 1;\n            var circleTwo = turf.circle(center, radiusTwo, options);\n                map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleTwo\n                    },\n                    \"paint\": {\n                    \"line-color\": \"#00AA46\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                    },\n                    \"layout\": {\n                    }\n                });\n                var radiusThree = 3;\n                var circleThree = turf.circle(center, radiusThree, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-three\",\n                    \"type\": \"line\",\n                    \"source\": {\n                        \"type\": \"geojson\",\n                        \"data\": circleThree\n                        },\n                        \"paint\": {\n                        \"line-color\": \"#71C780\",\n                        \"line-opacity\": 0.8,\n                        \"line-width\": 10,\n                        \"line-offset\": 5\n                        },\n                    \"layout\": {\n                    }\n                });\n                var radiusFour = 5;\n                var circleFour = turf.circle(center, radiusFour, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-four\",\n                    \"type\": \"line\",\n                    \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleFour\n                    },\n                    \"paint\": {\n                    \"line-color\": \"#D5EDDB\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                    },\n                    \"layout\": {\n                    }\n                });\n            });\n        }\n\n      map.on('click', toggleableLayers[i].id, function (e) {\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var name = e.features[0].properties.name;\n        var website = e.features[0].properties.website;\n        var bio = e.features[0].properties.bio;\n        var telephone = e.features[0].properties.telephone;\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n \n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n          .addTo(map);\n      });\n\n  });\n}; \n\n  \n    componentWillUnmount() {\n      this.map.remove();\n    }\n\n    render() {\n      const style = {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        width: '100%'\n      };\n  \n      return <div style={style} ref={el => this.mapContainer = el} />;\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}