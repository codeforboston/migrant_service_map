{"ast":null,"code":"import _classCallCheck from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dnoftsier/Dev/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dnoftsier/Dev/migrant_service_map/src/map.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport ToggleableLayers from './toggleableLayersObjects.js';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function () {\n        for (var i = 0; i < Object.keys(ToggleableLayers).length; i++) {\n          var id = ToggleableLayers[i].id;\n          var idStyle = map.setLayoutProperty(id, 'visibility', 'none');\n          map.on('click', ToggleableLayers[i].id, function (e) {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n\n            new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone).addTo(map);\n          });\n        }\n\n        map.addSource('single-point', {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          }\n        });\n        map.addLayer({\n          \"id\": \"point\",\n          \"source\": \"single-point\",\n          \"type\": \"circle\",\n          \"paint\": {\n            \"circle-radius\": 10,\n            \"circle-color\": \"#007cbf\"\n          }\n        });\n        geocoder.on('result', function (ev) {\n          map.removeLayer('circle-outline');\n          map.removeLayer('circle-outline-two');\n          map.removeLayer('circle-outline-three');\n          map.removeLayer('circle-outline-four');\n          map.getSource('single-point').setData(ev.result.geometry);\n          var center = {\n            \"type\": \"Feature\",\n            \"properties\": {\n              \"marker-color\": \"#0f0\"\n            },\n            \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": ev.result.geometry.coordinates\n            }\n          };\n          var radius = .5;\n          var options = {\n            steps: 100,\n            units: 'miles'\n          };\n          var circle = MapboxGeocoder.turf.circle(center, radius, options);\n          map.addLayer({\n            \"id\": \"circle-outline\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circle\n            },\n            \"paint\": {\n              \"line-color\": \"#046328\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n          var radiusTwo = 1;\n          var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n          map.addLayer({\n            \"id\": \"circle-outline-two\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circleTwo\n            },\n            \"paint\": {\n              \"line-color\": \"#00AA46\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n          var radiusThree = 3;\n          var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n          map.addLayer({\n            \"id\": \"circle-outline-three\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circleThree\n            },\n            \"paint\": {\n              \"line-color\": \"#71C780\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n          var radiusFour = 5;\n          var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n          map.addLayer({\n            \"id\": \"circle-outline-four\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circleFour\n            },\n            \"paint\": {\n              \"line-color\": \"#D5EDDB\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var style = {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        width: '100%'\n      };\n      return React.createElement(\"div\", {\n        id: \"map\",\n        style: style,\n        ref: function ref(el) {\n          return _this.mapContainer = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \" \");\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/dnoftsier/Dev/migrant_service_map/src/map.js"],"names":["React","Component","mapboxgl","MapboxGeocoder","ToggleableLayers","accessToken","Map","map","container","style","center","zoom","geocoder","addControl","on","i","Object","keys","length","id","idStyle","setLayoutProperty","e","coordinates","features","geometry","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","addSource","addLayer","ev","removeLayer","getSource","setData","result","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","remove","position","top","bottom","width","el","mapContainer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport ToggleableLayers from './toggleableLayersObjects.js';\n\n\nmapboxgl.accessToken ='pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nclass Map extends React.Component {\n    componentDidMount() {\n\n    let map = new mapboxgl.Map({\n        container: 'map', // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n        center: [-71.066954, 42.359947], // starting position [lng, lat]\n        zoom: 11 // starting zoom\n    });\n\n    let geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n    });\n\n    map.addControl(geocoder);\n     \n\n      map.on('load', function(){\n        for (var i = 0; i < Object.keys(ToggleableLayers).length; i++) {\n          var id = ToggleableLayers[i].id;\n          var idStyle = map.setLayoutProperty(id, 'visibility', 'none');\n\n            map.on('click', ToggleableLayers[i].id, function (e) {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n     \n            new mapboxgl.Popup()\n              .setLngLat(coordinates)\n              .setHTML('<h4>' + name + '</h4>' + '<a href=' + website + '>' + website + '</a>' + '<br><br>' + '<i>' + bio + '</i>' + '<br><br><b>Telephone: </b>' + telephone)\n              .addTo(map);\n          });\n      }\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n            });\n            map.addLayer({\n                \"id\": \"point\",\n                \"source\": \"single-point\",\n                \"type\": \"circle\",\n                \"paint\": {\n                    \"circle-radius\": 10,\n                    \"circle-color\": \"#007cbf\"\n                }\n            });\n            geocoder.on('result', function(ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": ev.result.geometry.coordinates\n                }\n            };\n            var radius = .5;\n            var options = {steps: 100, units: 'miles'};\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circle\n                },\n                \"paint\": {\n                \"line-color\": \"#046328\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n                },\n                \"layout\": {\n                }\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n                map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleTwo\n                    },\n                    \"paint\": {\n                    \"line-color\": \"#00AA46\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                    },\n                    \"layout\": {\n                    }\n                });\n                var radiusThree = 3;\n                var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-three\",\n                    \"type\": \"line\",\n                    \"source\": {\n                        \"type\": \"geojson\",\n                        \"data\": circleThree\n                        },\n                        \"paint\": {\n                        \"line-color\": \"#71C780\",\n                        \"line-opacity\": 0.8,\n                        \"line-width\": 10,\n                        \"line-offset\": 5\n                        },\n                    \"layout\": {\n                    }\n                });\n                var radiusFour = 5;\n                var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-four\",\n                    \"type\": \"line\",\n                    \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleFour\n                    },\n                    \"paint\": {\n                    \"line-color\": \"#D5EDDB\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                    },\n                    \"layout\": {\n                    }\n                });\n            });\n\n  });\n}; \n\n  \n    componentWillUnmount() {\n      this.map.remove();\n    }\n\n    render() {\n      const style = {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        width: '100%'\n      };\n  \n      return <div id='map' style={style} ref={el => this.mapContainer = el}> </div>;\n    }\n  };\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}