{"ast":null,"code":"import _classCallCheck from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js\";\nimport React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject } from './map-services.js';\nimport Menu from './components';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n\n    _this.popUp = function (e, map) {\n      var coordinates = e.features[0].geometry.coordinates.slice();\n      var name = e.features[0].properties.name;\n      var website = e.features[0].properties.website;\n      var bio = e.features[0].properties.bio;\n      var telephone = e.features[0].properties.telephone;\n\n      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n      }\n\n      new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4><a href=' + website + '>' + website + '</a><br><br><i>' + bio + '</i><br><br><b>Telephone: </b>' + telephone).addTo(map);\n    };\n\n    _this.state = {\n      providers: [],\n      resourcesObject: {},\n      categoriesList: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('map comp loaded');\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function () {\n        var providers = map.querySourceFeatures('composite', {\n          sourceLayer: 'refugees-services'\n        });\n        var categoriesList = getCategories(providers);\n        var resourcesObject = getResourceObject(providers);\n\n        _this2.setState({\n          providers: providers,\n          categoriesList: categoriesList,\n          resourcesObject: resourcesObject\n        });\n\n        map.on('click', function (e) {\n          return _this2.popUp(e, map);\n        });\n        map.addSource('single-point', {\n          \"type\": \"geojson\",\n          \"data\": {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          }\n        }); // map.addSource('single-point', {\n        //     \"type\": \"geojson\",\n        //     \"data\": {\n        //         \"type\": \"FeatureCollection\",\n        //         \"features\": []\n        //     }\n        // });\n\n        map.addLayer({\n          \"id\": \"point\",\n          \"source\": \"single-point\",\n          \"type\": \"circle\",\n          \"paint\": {\n            \"circle-radius\": 10,\n            \"circle-color\": \"#007cbf\"\n          }\n        });\n        geocoder.on('result', function (ev) {\n          map.removeLayer('circle-outline');\n          map.removeLayer('circle-outline-two');\n          map.removeLayer('circle-outline-three');\n          map.removeLayer('circle-outline-four');\n          map.getSource('single-point').setData(ev.result.geometry);\n          var center = {\n            \"type\": \"Feature\",\n            \"properties\": {\n              \"marker-color\": \"#0f0\"\n            },\n            \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": ev.result.geometry.coordinates\n            }\n          };\n          var radius = .5;\n          var options = {\n            steps: 100,\n            units: 'miles'\n          };\n          var circle = MapboxGeocoder.turf.circle(center, radius, options);\n          map.addLayer({\n            \"id\": \"circle-outline\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circle\n            },\n            \"paint\": {\n              \"line-color\": \"#046328\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n          var radiusTwo = 1;\n          var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n          map.addLayer({\n            \"id\": \"circle-outline-two\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circleTwo\n            },\n            \"paint\": {\n              \"line-color\": \"#00AA46\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n          var radiusThree = 3;\n          var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n          map.addLayer({\n            \"id\": \"circle-outline-three\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circleThree\n            },\n            \"paint\": {\n              \"line-color\": \"#71C780\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n          var radiusFour = 5;\n          var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n          map.addLayer({\n            \"id\": \"circle-outline-four\",\n            \"type\": \"line\",\n            \"source\": {\n              \"type\": \"geojson\",\n              \"data\": circleFour\n            },\n            \"paint\": {\n              \"line-color\": \"#D5EDDB\",\n              \"line-opacity\": 0.8,\n              \"line-width\": 10,\n              \"line-offset\": 5\n            },\n            \"layout\": {}\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"map map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        categoriesList: this.state.categoriesList,\n        resourcesObject: this.state.resourcesObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"map\",\n        className: \"map\",\n        ref: function ref(el) {\n          return _this3.mapContainer = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"addLayer\"));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js"],"names":["React","mapboxgl","MapboxGeocoder","getCategories","getResourceObject","Menu","accessToken","Map","props","popUp","e","map","coordinates","features","geometry","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","state","providers","resourcesObject","categoriesList","console","log","container","style","center","zoom","geocoder","addControl","on","querySourceFeatures","sourceLayer","setState","addSource","addLayer","ev","removeLayer","getSource","setData","result","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","remove","el","mapContainer","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject } from './map-services.js';\nimport Menu from './components';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\n\nclass Map extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            providers: [], \n            resourcesObject: {}, \n            categoriesList: []\n        }\n   }\n  \n    componentDidMount() {\n        console.log('map comp loaded');\n       \n        let map = new mapboxgl.Map({\n            container: 'map', // container id\n            style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n            center: [-71.066954, 42.359947], // starting position [lng, lat]\n            zoom: 11 // starting zoom\n        });\n        \n    \n        var geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n\n        map.on('load', () => {\n            let providers = map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'});\n            let categoriesList = getCategories(providers); \n            let resourcesObject = getResourceObject(providers); \n            this.setState({providers: providers,\n                    categoriesList: categoriesList, \n                    resourcesObject: resourcesObject});\n\n        map.on('click', (e) => this.popUp(e, map)); \n\n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        // map.addSource('single-point', {\n        //     \"type\": \"geojson\",\n        //     \"data\": {\n        //         \"type\": \"FeatureCollection\",\n        //         \"features\": []\n        //     }\n        // });\n        map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n                \"circle-radius\": 10,\n                \"circle-color\": \"#007cbf\"\n            }\n        });\n\n        geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                    \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": ev.result.geometry.coordinates\n                }\n            };\n            var radius = .5;\n            var options = {\n                steps: 100,\n                units: 'miles'\n            };\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circle\n                },\n                \"paint\": {\n                    \"line-color\": \"#046328\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n            map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleTwo\n                },\n                \"paint\": {\n                    \"line-color\": \"#00AA46\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n            map.addLayer({\n                \"id\": \"circle-outline-three\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleThree\n                },\n                \"paint\": {\n                    \"line-color\": \"#71C780\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n            map.addLayer({\n                \"id\": \"circle-outline-four\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleFour\n                },\n                \"paint\": {\n                    \"line-color\": \"#D5EDDB\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n        });\n    });  \n};\n\npopUp = (e, map) => {\n    var coordinates = e.features[0].geometry.coordinates.slice();\n    var name = e.features[0].properties.name;\n    var website = e.features[0].properties.website;\n    var bio = e.features[0].properties.bio;\n    var telephone = e.features[0].properties.telephone;\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n    }\n    \n    new mapboxgl.Popup()\n        .setLngLat(coordinates)\n        .setHTML('<h4>' + name + '</h4><a href=' + website + '>' + website + '</a><br><br><i>' + bio + '</i><br><br><b>Telephone: </b>' + telephone)\n        .addTo(map);\n}; \n\n\n    componentWillUnmount() {\n        this.map.remove();\n    }\n\n\n\n    render(){\n        return (\n        <div className='map map-container' >\n            <Menu categoriesList={this.state.categoriesList}\n                  resourcesObject={this.state.resourcesObject} />\n            <div id='map'\n                className='map'\n                ref={el => this.mapContainer = el}\n                >addLayer\n            </div> \n        </div>\n        )\n    };\n}; \n\nexport default Map;"]},"metadata":{},"sourceType":"module"}