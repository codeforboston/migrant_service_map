{"ast":null,"code":"import _classCallCheck from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js\";\nimport React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport ToggleableLayers from './toggleableLayersObjects.js';\nimport './index.css';\nimport { setPopup } from './map-services.js';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map() {\n    _classCallCheck(this, Map);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Map).apply(this, arguments));\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function () {\n        for (var i = 0; i < Object.keys(ToggleableLayers).length; i++) {\n          var id = ToggleableLayers[i].id;\n          var idStyle = map.setLayoutProperty(id, 'visibility', 'none');\n          map.on('click', function (e) {\n            return setPopup(e, map);\n          });\n        }\n      });\n      map.addSource('single-point', {\n        \"type\": \"geojson\",\n        \"data\": {\n          \"type\": \"FeatureCollection\",\n          \"features\": []\n        }\n      });\n      map.addLayer({\n        \"id\": \"point\",\n        \"source\": \"single-point\",\n        \"type\": \"circle\",\n        \"paint\": {\n          \"circle-radius\": 10,\n          \"circle-color\": \"#007cbf\"\n        }\n      });\n      geocoder.on('result', function (ev) {\n        map.removeLayer('circle-outline');\n        map.removeLayer('circle-outline-two');\n        map.removeLayer('circle-outline-three');\n        map.removeLayer('circle-outline-four');\n        map.getSource('single-point').setData(ev.result.geometry);\n        var center = {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"marker-color\": \"#0f0\"\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": ev.result.geometry.coordinates\n          }\n        };\n        var radius = .5;\n        var options = {\n          steps: 100,\n          units: 'miles'\n        };\n        var circle = MapboxGeocoder.turf.circle(center, radius, options);\n        map.addLayer({\n          \"id\": \"circle-outline\",\n          \"type\": \"line\",\n          \"source\": {\n            \"type\": \"geojson\",\n            \"data\": circle\n          },\n          \"paint\": {\n            \"line-color\": \"#046328\",\n            \"line-opacity\": 0.8,\n            \"line-width\": 10,\n            \"line-offset\": 5\n          },\n          \"layout\": {}\n        });\n        var radiusTwo = 1;\n        var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n        map.addLayer({\n          \"id\": \"circle-outline-two\",\n          \"type\": \"line\",\n          \"source\": {\n            \"type\": \"geojson\",\n            \"data\": circleTwo\n          },\n          \"paint\": {\n            \"line-color\": \"#00AA46\",\n            \"line-opacity\": 0.8,\n            \"line-width\": 10,\n            \"line-offset\": 5\n          },\n          \"layout\": {}\n        });\n        var radiusThree = 3;\n        var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n        map.addLayer({\n          \"id\": \"circle-outline-three\",\n          \"type\": \"line\",\n          \"source\": {\n            \"type\": \"geojson\",\n            \"data\": circleThree\n          },\n          \"paint\": {\n            \"line-color\": \"#71C780\",\n            \"line-opacity\": 0.8,\n            \"line-width\": 10,\n            \"line-offset\": 5\n          },\n          \"layout\": {}\n        });\n        var radiusFour = 5;\n        var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n        map.addLayer({\n          \"id\": \"circle-outline-four\",\n          \"type\": \"line\",\n          \"source\": {\n            \"type\": \"geojson\",\n            \"data\": circleFour\n          },\n          \"paint\": {\n            \"line-color\": \"#D5EDDB\",\n            \"line-opacity\": 0.8,\n            \"line-width\": 10,\n            \"line-offset\": 5\n          },\n          \"layout\": {}\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = {\n        position: 'absolute',\n        top: '100px',\n        bottom: '5px',\n        width: '50%'\n      };\n      return React.createElement(\"div\", {\n        className: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        style: style,\n        ref: function ref(el) {\n          this.mapContainer = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \" \");\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js"],"names":["React","Component","mapboxgl","MapboxGeocoder","ToggleableLayers","setPopup","accessToken","Map","map","container","style","center","zoom","geocoder","addControl","on","i","Object","keys","length","id","idStyle","setLayoutProperty","e","addSource","addLayer","ev","removeLayer","getSource","setData","result","geometry","coordinates","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","remove","position","top","bottom","width","el","mapContainer"],"mappings":"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","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport ToggleableLayers from './toggleableLayersObjects.js';\nimport './index.css';\nimport { setPopup } from './map-services.js';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nclass Map extends React.Component {\n\n    componentDidMount() {\n\n        let map = new mapboxgl.Map({\n            container: 'map', // container id\n            style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n            center: [-71.066954, 42.359947], // starting position [lng, lat]\n            zoom: 11 // starting zoom\n        });\n\n        let geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n\n\n        map.on('load', function () {\n            for (var i = 0; i < Object.keys(ToggleableLayers).length; i++) {\n                var id = ToggleableLayers[i].id;\n                var idStyle = map.setLayoutProperty(id, 'visibility', 'none');\n\n                map.on('click', function(e){return setPopup(e, map)}); \n            }}); \n\n            map.addSource('single-point', {\n                \"type\": \"geojson\",\n                \"data\": {\n                    \"type\": \"FeatureCollection\",\n                    \"features\": []\n                }\n            });\n            map.addLayer({\n                \"id\": \"point\",\n                \"source\": \"single-point\",\n                \"type\": \"circle\",\n                \"paint\": {\n                    \"circle-radius\": 10,\n                    \"circle-color\": \"#007cbf\"\n                }\n            });\n            geocoder.on('result', function (ev) {\n                map.removeLayer('circle-outline');\n                map.removeLayer('circle-outline-two');\n                map.removeLayer('circle-outline-three');\n                map.removeLayer('circle-outline-four');\n                map.getSource('single-point').setData(ev.result.geometry);\n                var center = {\n                    \"type\": \"Feature\",\n                    \"properties\": {\n                        \"marker-color\": \"#0f0\"\n                    },\n                    \"geometry\": {\n                        \"type\": \"Point\",\n                        \"coordinates\": ev.result.geometry.coordinates\n                    }\n                };\n                var radius = .5;\n                var options = {\n                    steps: 100,\n                    units: 'miles'\n                };\n                var circle = MapboxGeocoder.turf.circle(center, radius, options);\n                map.addLayer({\n                    \"id\": \"circle-outline\",\n                    \"type\": \"line\",\n                    \"source\": {\n                        \"type\": \"geojson\",\n                        \"data\": circle\n                    },\n                    \"paint\": {\n                        \"line-color\": \"#046328\",\n                        \"line-opacity\": 0.8,\n                        \"line-width\": 10,\n                        \"line-offset\": 5\n                    },\n                    \"layout\": {}\n                });\n                var radiusTwo = 1;\n                var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-two\",\n                    \"type\": \"line\",\n                    \"source\": {\n                        \"type\": \"geojson\",\n                        \"data\": circleTwo\n                    },\n                    \"paint\": {\n                        \"line-color\": \"#00AA46\",\n                        \"line-opacity\": 0.8,\n                        \"line-width\": 10,\n                        \"line-offset\": 5\n                    },\n                    \"layout\": {}\n                });\n                var radiusThree = 3;\n                var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-three\",\n                    \"type\": \"line\",\n                    \"source\": {\n                        \"type\": \"geojson\",\n                        \"data\": circleThree\n                    },\n                    \"paint\": {\n                        \"line-color\": \"#71C780\",\n                        \"line-opacity\": 0.8,\n                        \"line-width\": 10,\n                        \"line-offset\": 5\n                    },\n                    \"layout\": {}\n                });\n                var radiusFour = 5;\n                var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n                map.addLayer({\n                    \"id\": \"circle-outline-four\",\n                    \"type\": \"line\",\n                    \"source\": {\n                        \"type\": \"geojson\",\n                        \"data\": circleFour\n                    },\n                    \"paint\": {\n                        \"line-color\": \"#D5EDDB\",\n                        \"line-opacity\": 0.8,\n                        \"line-width\": 10,\n                        \"line-offset\": 5\n                    },\n                    \"layout\": {}\n                });\n            });\n\n    };\n\n\n    componentWillUnmount() {\n        this.map.remove();\n    }\n\n    render() {\n        const style = {\n            position: 'absolute',\n            top: '100px',\n            bottom: '5px',\n            width: '50%',\n        };\n        return (\n        <div className = 'map' >\n            <div id='map' style={style}\n        ref = { function(el){ this.mapContainer = el } } >\n            </div> </div>\n        )\n    };\n}; \n\nexport default Map;"]},"metadata":{},"sourceType":"module"}