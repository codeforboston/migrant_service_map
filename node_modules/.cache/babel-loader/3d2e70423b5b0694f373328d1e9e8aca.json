{"ast":null,"code":"import _classCallCheck from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js\";\nimport React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject, makeResourceEntry } from './map-services.js';\nimport Menu from './components';\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\nvar Map =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Map, _React$Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      services: [],\n      resourcesObject: {},\n      categoriesList: []\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('map comp loaded');\n      var map = new mapboxgl.Map({\n        container: 'map',\n        // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o',\n        // stylesheet location\n        center: [-71.066954, 42.359947],\n        // starting position [lng, lat]\n        zoom: 11 // starting zoom\n\n      });\n      var geocoder = new MapboxGeocoder({\n        accessToken: mapboxgl.accessToken\n      });\n      map.addControl(geocoder);\n      map.on('load', function () {\n        var sources = map.querySourceFeatures('composite', {\n          sourceLayer: 'refugees-services'\n        });\n        var categoriesList = getCategories(sources);\n        var resourcesObject = getResourceObject(sources);\n\n        _this2.setState({\n          services: sources,\n          categoriesList: categoriesList,\n          resourcesObject: resourcesObject\n        });\n\n        map.on('click', function (e) {\n          var coordinates = e.features[0].geometry.coordinates.slice();\n          var name = e.features[0].properties.name;\n          var website = e.features[0].properties.website;\n          var bio = e.features[0].properties.bio;\n          var telephone = e.features[0].properties.telephone;\n\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n\n          new mapboxgl.Popup().setLngLat(coordinates).setHTML('<h4>' + name + '</h4><a href=' + website + '>' + website + '</a><br><br><i>' + bio + '</i><br><br><b>Telephone: </b>' + telephone).addTo(map); // }); \n\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n          });\n          map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n          });\n          map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n              \"circle-radius\": 10,\n              \"circle-color\": \"#007cbf\"\n            }\n          });\n          geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n              \"type\": \"Feature\",\n              \"properties\": {\n                \"marker-color\": \"#0f0\"\n              },\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": ev.result.geometry.coordinates\n              }\n            };\n            var radius = .5;\n            var options = {\n              steps: 100,\n              units: 'miles'\n            };\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n              \"id\": \"circle-outline\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circle\n              },\n              \"paint\": {\n                \"line-color\": \"#046328\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n            map.addLayer({\n              \"id\": \"circle-outline-two\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleTwo\n              },\n              \"paint\": {\n                \"line-color\": \"#00AA46\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n            map.addLayer({\n              \"id\": \"circle-outline-three\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleThree\n              },\n              \"paint\": {\n                \"line-color\": \"#71C780\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n            map.addLayer({\n              \"id\": \"circle-outline-four\",\n              \"type\": \"line\",\n              \"source\": {\n                \"type\": \"geojson\",\n                \"data\": circleFour\n              },\n              \"paint\": {\n                \"line-color\": \"#D5EDDB\",\n                \"line-opacity\": 0.8,\n                \"line-width\": 10,\n                \"line-offset\": 5\n              },\n              \"layout\": {}\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.map.remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"map map-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        categoriesList: this.state.categoriesList,\n        resourcesObject: this.state.resourcesObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"map\",\n        className: \"map\",\n        ref: function ref(el) {\n          return _this3.mapContainer = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"addLayer\"));\n    }\n  }]);\n\n  return Map;\n}(React.Component);\n\n;\nexport default Map;","map":{"version":3,"sources":["/Users/sashamaryl/Documents/codeForBoston/migrant_service_map/src/map.js"],"names":["React","mapboxgl","MapboxGeocoder","getCategories","getResourceObject","makeResourceEntry","Menu","accessToken","Map","props","state","services","resourcesObject","categoriesList","console","log","map","container","style","center","zoom","geocoder","addControl","on","sources","querySourceFeatures","sourceLayer","setState","e","coordinates","features","geometry","slice","name","properties","website","bio","telephone","Math","abs","lngLat","lng","Popup","setLngLat","setHTML","addTo","addSource","addLayer","ev","removeLayer","getSource","setData","result","radius","options","steps","units","circle","turf","radiusTwo","circleTwo","radiusThree","circleThree","radiusFour","circleFour","remove","el","mapContainer","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport './index.css';\nimport { getCategories, getResourceObject, makeResourceEntry } from './map-services.js';\nimport Menu from './components';\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicmVmdWdlZXN3ZWxjb21lIiwiYSI6ImNqZ2ZkbDFiODQzZmgyd3JuNTVrd3JxbnAifQ.UY8Y52GQKwtVBXH2ssbvgw';\n\n\nclass Map extends React.Component {\n    constructor(props){\n        super(props); \n        this.state = {\n            services: [], \n            resourcesObject: {}, \n            categoriesList: []\n        }\n   }\n  \n    componentDidMount() {\n        console.log('map comp loaded');\n       \n        \n        let map = new mapboxgl.Map({\n        container: 'map', // container id\n        style: 'mapbox://styles/refugeeswelcome/cjh9k11zz15ds2spbs4ld6y9o', // stylesheet location\n        center: [-71.066954, 42.359947], // starting position [lng, lat]\n        zoom: 11 // starting zoom\n        });\n        \n    \n        var geocoder = new MapboxGeocoder({\n            accessToken: mapboxgl.accessToken\n        });\n\n        map.addControl(geocoder);\n\n        map.on('load', () => {\n            let sources = map.querySourceFeatures('composite', {sourceLayer: 'refugees-services'});\n            let categoriesList = getCategories(sources); \n            let resourcesObject = getResourceObject(sources); \n            \n            this.setState({services: sources,\n                    categoriesList: categoriesList, \n                    resourcesObject: resourcesObject});\n\n\n\n\n        map.on('click', (e) => {\n            var coordinates = e.features[0].geometry.coordinates.slice();\n            var name = e.features[0].properties.name;\n            var website = e.features[0].properties.website;\n            var bio = e.features[0].properties.bio;\n            var telephone = e.features[0].properties.telephone;\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n            }\n            \n            new mapboxgl.Popup()\n                .setLngLat(coordinates)\n                .setHTML('<h4>' + name + '</h4><a href=' + website + '>' + website + '</a><br><br><i>' + bio + '</i><br><br><b>Telephone: </b>' + telephone)\n                .addTo(map);\n        // }); \n    \n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        map.addSource('single-point', {\n            \"type\": \"geojson\",\n            \"data\": {\n                \"type\": \"FeatureCollection\",\n                \"features\": []\n            }\n        });\n        map.addLayer({\n            \"id\": \"point\",\n            \"source\": \"single-point\",\n            \"type\": \"circle\",\n            \"paint\": {\n                \"circle-radius\": 10,\n                \"circle-color\": \"#007cbf\"\n            }\n        });\n\n        geocoder.on('result', function (ev) {\n            map.removeLayer('circle-outline');\n            map.removeLayer('circle-outline-two');\n            map.removeLayer('circle-outline-three');\n            map.removeLayer('circle-outline-four');\n            map.getSource('single-point').setData(ev.result.geometry);\n            var center = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                    \"marker-color\": \"#0f0\"\n                },\n                \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": ev.result.geometry.coordinates\n                }\n            };\n            var radius = .5;\n            var options = {\n                steps: 100,\n                units: 'miles'\n            };\n            var circle = MapboxGeocoder.turf.circle(center, radius, options);\n            map.addLayer({\n                \"id\": \"circle-outline\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circle\n                },\n                \"paint\": {\n                    \"line-color\": \"#046328\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusTwo = 1;\n            var circleTwo = MapboxGeocoder.turf.circle(center, radiusTwo, options);\n            map.addLayer({\n                \"id\": \"circle-outline-two\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleTwo\n                },\n                \"paint\": {\n                    \"line-color\": \"#00AA46\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusThree = 3;\n            var circleThree = MapboxGeocoder.turf.circle(center, radiusThree, options);\n            map.addLayer({\n                \"id\": \"circle-outline-three\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleThree\n                },\n                \"paint\": {\n                    \"line-color\": \"#71C780\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n            var radiusFour = 5;\n            var circleFour = MapboxGeocoder.turf.circle(center, radiusFour, options);\n            map.addLayer({\n                \"id\": \"circle-outline-four\",\n                \"type\": \"line\",\n                \"source\": {\n                    \"type\": \"geojson\",\n                    \"data\": circleFour\n                },\n                \"paint\": {\n                    \"line-color\": \"#D5EDDB\",\n                    \"line-opacity\": 0.8,\n                    \"line-width\": 10,\n                    \"line-offset\": 5\n                },\n                \"layout\": {}\n            });\n        });\n    });\n}); \n    \n}\n;\n\n    componentWillUnmount() {\n        this.map.remove();\n    }\n\n\n\n    render(){\n        return (\n        <div className='map map-container' >\n            <Menu categoriesList={this.state.categoriesList}\n                  resourcesObject={this.state.resourcesObject} />\n            <div id='map'\n                className='map'\n                ref={el => this.mapContainer = el}\n                >addLayer\n            </div> \n        </div>\n        )\n    };\n}; \n\nexport default Map;"]},"metadata":{},"sourceType":"module"}